extends layoutAuth
- bodyclass=''

block headermeta

block headerscripts
  script(src="/vendor/js/require.js", data-main="/js/accountRequireJsConfig.js")
  link(rel='stylesheet', href='/vendor/css/font-awesome.min.css')
  link(rel='stylesheet', href='/css/account.css')
  
  script(type='text/javascript').
    var renderModel = !{JSON.stringify(renderModel)}

block content
  .col-xs-12(data-bind='if: hasError')
    .alert.alert-danger.panel-content
      .close(data-bind="click: closeErrorClick") &times;
      span(data-bind="html: errorMessage")
      .clearfix
  .col-xs-12(data-bind='if: hasSuccess')
    .alert.alert-success.panel-content
      .close(data-bind="click: closeSuccessClick") &times;
      span(data-bind="html: successMessage")
      .clearfix
              
  .col-md-6
    .panel.panel-default.panel-content
      .panel-heading
        span= renderModel.labels.account.profile.header
      .panel-body
        .form-group
          strong= renderModel.labels.account.profile.email
          span(data-bind='text: email')
        
        hr
        
        strong= renderModel.labels.account.profile.username
        .form-group
          input.form-control(data-bind='textInput: profilePanelViewModel().username')
        .pull-right.btn.btn-primary(data-bind='click: profilePanelViewModel().updateUsernameClick')= renderModel.labels.account.profile.changeUsername
        .clearfix
        
        hr
        
        .form-group
          div
            strong= renderModel.labels.account.profile.oldPassword
            input.form-control(type='password', data-bind='textInput: profilePanelViewModel().oldPassword')
        .form-group
          div
            strong= renderModel.labels.account.profile.newPassword
            input.form-control(type='password', data-bind='textInput: profilePanelViewModel().newPassword')
        .form-group
          div
            strong= renderModel.labels.account.profile.newConfirmedPassword
            input.form-control(type='password', data-bind='textInput: profilePanelViewModel().newConfirmedPassword')
        .pull-right.btn.btn-primary(data-bind='click: profilePanelViewModel().updatePasswordClick')= renderModel.labels.account.profile.changePassword
        
  .col-md-6
    .panel.panel-default.panel-content
      .panel-heading
        span= renderModel.labels.account.team.header
      .panel-body
        div(data-bind='if: !teamPanelViewModel().isEmpty()')
          div
            div
              strong= renderModel.labels.account.team.yourTeam
              span(data-bind='text: teamPanelViewModel().name()')
              span(data-bind='if: teamPanelViewModel().isCapitan()')= renderModel.labels.account.team.captainInBrackets
            div(data-bind='if: teamPanelViewModel().users().length')
              strong= renderModel.labels.account.team.composition
              ul(data-bind='foreach: teamPanelViewModel().users')
                li
                  strong(data-bind='text: username')
                  span(data-bind='if: $parent.capitanId() === userId()')
                    i.fa.fa-lg.fa-star.captain-star(title= renderModel.labels.account.team.capitanPopup)
                  span(data-bind='if: $parent.capitanId() !== userId()')
                    i.fa.fa-lg.fa-star.member-star(data-bind='click: setCaptainClick')
                  span(data-bind='if: $parent.isCaptain() && $root.userId() !== userId()')
                    i.fa.fa-times.remove-user(title= renderModel.labels.account.team.removeUserFromTeamPopup, data-bind='click: $removeFromTeamClick')

        div(data-bind='if: !teamPanelViewModel().isEmpty() && teamPanelViewModel().isCaptain()')
          .panel.panel-default.panel-content.clearfix
            .panel-heading
              span= renderModel.labels.account.team.invite.header
            .panel-body
              strong= renderModel.labels.account.team.invite.enterUsername
              .form-group
                input.form-control(data-bind='textInput: teamPanelViewModel().usernameForAdd')
              .pull-right
                .btn.btn-primary(data-bind='click: teamPanelViewModel().inviteUserClick')= renderModel.labels.account.team.invite.inviteUser

        div(data-bind='if: !teamPanelViewModel().isEmpty() && (!teamPanelViewModel().isCaptain() || (teamPanelViewModel().isCaptain() && teamPanelViewModel().users().length === 1))')
          .panel.panel-default.panel-content
            .panel-heading
              span= renderModel.labels.account.team.leaveTeam.header
            #leave-team-panel-body.panel-body
              .pull-left.text-center(data-bind='if: teamPanelViewModel().users().length > 1')
                .btn.btn-default(data-bind='click: teamPanelViewModel().leaveTeamClick')= renderModel.labels.account.team.leaveTeam.leave
              .pull-left.text-center(data-bind='if: teamPanelViewModel().users().length === 1')
                .btn.btn-default(data-bind='click: teamPanelViewModel().leaveTeamClick')= renderModel.labels.account.team.leaveTeam.save

        div(data-bind='if: teamPanelViewModel().isEmpty()')
          .panel.panel-default.panel-content
            .panel-heading
              span= renderModel.labels.account.team.createTeam.header
            .panel-body
              strong= renderModel.labels.account.team.createTeam.name
              .form-group
                input.form-control(data-bind='textInput: teamPanelViewModel().newTeamName')
              .pull-right.btn.btn-primary(data-bind='click: teamPanelViewModel().createTeamClick')= renderModel.labels.account.team.createTeam.create
    
  .col-md-6(data-bind='if: invitePanelViewModel().invites().length')
    .panel.panel-default.panel-content
      .panel-heading
        span= renderModel.labels.account.invites.header
      .panel-body           
        div(data-bind='foreach: invitePanelViewModel().invites')
          .panel.panel-default.panel-content
            .panel-heading
              span= renderModel.labels.account.invites.newInvite
            #invites-panel-body.panel-body
              span= renderModel.labels.account.invites.newInviteMessage
              strong(data-bind='text: fromTeamName')
              div
                .pull-right
                  .btn.btn-primary(data-bind='click: commitClick')= renderModel.labels.account.invites.commit
                  .btn.btn-default(data-bind='click: cancelClick')= renderModel.labels.account.invites.cancel

  .col-md-6(data-bind='if: teamPanelViewModel().isEmpty() && emptyTeamsPanelViewModel().emptyTeams().length')
    .panel.panel-default.panel-content
      .panel-heading
        span= renderModel.labels.account.emptyTeams.header
      .panel-body
        div(data-bind='foreach: emptyTeamsPanelViewModel().emptyTeams')
          .empty-teams
            strong(data-bind='text: name')
            .btn.btn-default(title= renderModel.labels.account.emptyTeams.backPopup, data-bind='click: enterTeamClick')
              i.fa.fa-undo
  
  .col-xs-12(data-bind='if: isAdmin() === 1')
    .panel.panel-default.panel-content
      .panel-heading
        span= renderModel.labels.account.games.header
      .panel-body
        div(data-bind="class: gamesPanelViewModel().games().length ? 'form-group': ''")
          .btn.btn-primary(data-bind='click: gamesPanelViewModel().createGameClick')= renderModel.labels.account.games.create
        div(data-bind='if: gamesPanelViewModel().games().length')
          table.table.table-bordered.table-striped
            tr
              th= renderModel.labels.account.games.number
              th= renderModel.labels.account.games.name
              th= renderModel.labels.account.games.active
              th= renderModel.labels.account.games.statistics
              th= renderModel.labels.account.games.teams
              th= renderModel.labels.account.games.edit
              th= renderModel.labels.account.games.remove
            tbody(data-bind='foreach: gamesPanelViewModel().games')
              tr
                td
                  strong(data-bind='text: $index()+1')
                td
                  strong(data-bind='text: name')
                td
                  input(type='checkbox', disabled='disabled' data-bind='checked: enableActive')
                td
                  input(type='checkbox', disabled='disabled' data-bind='checked: enableStatistics')
                td
                  div(data-bind='foreach: teams')
                    .game-team(data-bind='text: name')
                  .btn.btn-default(data-toggle='modal', data-target='#teams-modal', data-bind='click: editGameTeamsClick')
                    i.fa.fa-lg.fa-exchange
                td
                  .btn.btn-default(data-bind='click: editGameClick')
                    i.fa.fa-lg.fa-edit
                td
                  .btn.btn-default(data-bind='click: removeGameClick')
                    i.fa.fa-lg.fa-trash
  
  // modals
  #teams-modal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='team-modal-label')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true')
              | &times;
          h4#team-modal-label.modal-title= renderModel.labels.account.teamsModal.header
        .modal-body
          table.table.table-bordered.table-striped.table-responsive
            tr
              th= renderModel.labels.account.teamsModal.teamId
              th= renderModel.labels.account.teamsModal.teamName
              th= renderModel.labels.account.teamsModal.teamIsChecked
            tbody(data-bind='foreach: allTeams')
              tr
                td(data-bind='text: id')
                td(data-bind='text: name')
                td
                  input(type='checkbox', data-bind='checked: isChecked')
        .modal-footer
          button.btn.btn-default(type='button', data-dismiss='modal')= renderModel.labels.account.teamsModal.cancel
          button.btn.btn-primary(type='button', data-bind='click: commitGameTeamsClick')= renderModel.labels.account.teamsModal.commit
                      
                
